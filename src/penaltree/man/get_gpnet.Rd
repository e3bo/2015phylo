% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regularization.R
\name{get_gpnet}
\alias{get_gpnet}
\title{Run a general purpose optimizer with lasso or elasticnet regularization}
\usage{
get_gpnet(x, y, calc_convex_nll, param_map, alpha = 1, nlambda = 100,
  lambda.min.ratio = 0.01, lambda = NULL, standardize = TRUE,
  thresh = 1e-04, dfmax = nvars + 1, pmax = min(dfmax * 2 + 20, nvars),
  exclude, penalty.factor = rep(1, nvars), lower.limits = -Inf,
  upper.limits = Inf, maxit = 100, make_log = FALSE, winit)
}
\arguments{
\item{x}{matrix of predictors for linear model}

\item{y}{response data that will be used to fit the model}

\item{calc_convex_nll}{function that will be used to calculate the likelihood of the data}

\item{param_map}{function that maps vector of parameters into named list for likelihood function}

\item{alpha}{proportion of penalty function that is L1 instead of L2}

\item{nlambda}{number of penalty values to on regularization path}

\item{lambda.min.ratio}{ratio of lowest penalty on path to highest
penalty. Used to determine sequence of penalties of lambda argument
is null}

\item{lambda}{sequence of penalties to include in regularization path}

\item{standardize}{Not currently used}

\item{thresh}{threshold for subgradient to determine convergence at each lambda}

\item{dfmax}{not currently used}

\item{pmax}{not currently used}

\item{exclude}{not currently used}

\item{penalty.factor}{vector equal in length to the number of
parameters, factor by which lambda is multiplied for each parameter to calculate penalty}

\item{lower.limits}{lower limits for penalized parameters}

\item{upper.limits}{upper limits for penalized parameters}

\item{maxit}{maximum number of iterations in optimization attempt for each lambda}

\item{make_log}{whether or not to print out information about the optimization to temporary files}

\item{winit}{parameter values used to initialize optimization}
}
\description{
Run a general purpose optimizer with lasso or elasticnet regularization
}

